#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions
mai:[A-Z]
min:[a-z]
letra: {mai} | {min}
dig:[0-9]
digAux: [1-9]
ordGrandeza: d {digAux} {dig}*
format: (n | s | t)

// Comentarios
comentLinha: # ( [^\n] )*
comentBloco: \[ \n ( [^ \[ \]] )* \n \]
#Tokens
// Identificadores
identificador: {letra} ( _? ( {letra} | {dig} ) )*

// Tipos
tpInt   : {dig}+ | ( ( {dig}* {digAux} ) {ordGrandeza} )
tpFloat : {dig}* \. ( ( ( {dig}* {digAux}) {ordGrandeza} ) | {dig}+)
tpChar  : \\ {format}
tpString: \" ( [^\n \\ \"] )* \"

// Palavras Reservadas
int     = identificador : "int"
float   = identificador : "float"
char    = identificador : "char"
string  = identificador : "string"
boolean = identificador : "boolean"
break   = identificador : "break"
end     = identificador : "end"
if      = identificador : "if"
else    = identificador : "else"
while   = identificador : "while"
do      = identificador : "do"
readln  = identificador : "readln"
false   = identificador : "false"
true    = identificador : "true"
fun     = identificador : "fun"
main    = identificador : "main"
print   = identificador : "print"
println = identificador : "println"
val     = identificador : "val"
var     = identificador : "var"

// Simbolos Especiais
":"
","
";"
"="
"+"
"-"
"*"
"/"
"{"
"}"
"%"
"("
")"
">"
"<"
"=="
"!="
"&&"
"||"
"!"

// Remover format char 
:[\ \n\s\t]

:! {comentLinha}
:! {comentBloco}
#NonTerminals
<programa>

<expressao>

<instrucao>

<lista_instrucoes>
<lista_instrucoes_>

<declaracao_constantes>

<declaracao_variaveis>

<comando>

<lista_identificadores>
<lista_identificadores_>

<tipo>

<valor>

<atribuicao>

<entrada>

<lista_expressao>
<lista_expressao_>

<saida>

<selecao>

<repeticao>

<string_opcional>

<tipo_saida>

<else_opcional>

<lista_comandos>
<lista_comandos_>

<dec_t>
<dec_t_>

<dec_v>

<opcoes>

<expressao_>

<elemento>

<aritmetica>

<aritmetica_>

<relacional>

<relacional_>

<termo>

<termo_>

<fator>

<operador_relacional>
#Grammar
//Super Grupo: Arthur Bezerra Pinotti, Kaue Reblin e Luiz Gustavo Klitzke

<programa> ::= #15 fun main "{" <lista_instrucoes> "}" #16 ;

<tipo> ::= float | int | char | string | boolean ;
<valor> ::= tpInt | tpFloat | tpString | tpChar | true | false ;

<lista_identificadores> ::= identificador #32 <lista_identificadores_> ;
<lista_identificadores_> ::= "," <lista_identificadores> | î ;

<instrucao> ::= <declaracao_constantes> | <declaracao_variaveis> | <comando> ;
<lista_instrucoes> ::= <instrucao> <lista_instrucoes_> ;
<lista_instrucoes_> ::= <lista_instrucoes> | î ;

<dec_t> ::= ":" <tipo> #30 #31 <dec_t_> ;
<dec_t_> ::= "=" <valor> | î ;
<dec_v> ::= "=" <valor> ;

<opcoes> ::= <dec_t> | <dec_v> ;

<declaracao_constantes> ::= val <lista_identificadores> <opcoes> ";" ;
<declaracao_variaveis> ::= var <lista_identificadores> <opcoes> ";" ;

<comando> ::= <atribuicao> | <entrada> | <saida> | <selecao> | <repeticao> | break ";" ;
<lista_comandos> ::= <comando> <lista_comandos_> ;
<lista_comandos_> ::= <lista_comandos> | î ;

<atribuicao> ::= identificador #32 "=" <expressao> #34 ";" ;

<entrada> ::= readln "(" <string_opcional> <lista_identificadores> #35 ")" ";" ;
<string_opcional> ::= tpString #22 #14 "," | î ;

<lista_expressao> ::= <expressao> #14 <lista_expressao_>;
<lista_expressao_> ::= "," <lista_expressao> | î ;

<saida> ::= <tipo_saida> "(" <lista_expressao> ")" #17 ";" ;
<tipo_saida> ::= print | println;

<selecao> ::= if "(" <expressao> ")" #24 <lista_comandos> <else_opcional> end #26 ";" ;
<else_opcional> ::= else #25 <lista_comandos> | î ;

<repeticao> ::= #27 do <lista_comandos> while "(" <expressao> ")" #28 end ";" ;

<expressao> ::= <elemento> <expressao_> ;
<expressao_> ::= "&&" <elemento> #18 <expressao_> |
		 "||" <elemento> #19 <expressao_> | î ;

<elemento> ::= <relacional> | true #11 | false #12 | "!" <elemento> #13;

<relacional> ::= <aritmetica> <relacional_> ;
<relacional_> ::= <operador_relacional> #9 <aritmetica> #10 | î ;

<operador_relacional> ::= "==" | "!=" | "<" | ">" ;

<aritmetica> ::= <termo> <aritmetica_> ;
<aritmetica_> ::= "+" <termo> #1 <aritmetica_> | "-" <termo> #2 <aritmetica_> | î ;

<termo> ::= <fator> <termo_> ;
<termo_> ::= î | "*" <fator> #3  <termo_> 
 	       | "/" <fator> #4  <termo_> 
	       | "%" <fator> #20 <termo_> ;

<fator> ::= identificador        #33|
	    tpInt	       #5 |
	    tpFloat  	       #6 |
	    tpChar 	       #21|
	    tpString 	       #22|
	    "(" <expressao> ")"    |
	    "+" <fator> 	       #7 | 
	    "-" <fator>         #8;

